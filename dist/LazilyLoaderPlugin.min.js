const LazilyLoaderPlugin=function(t){const e={iframe:function(t,e){e(t,["src"])},img:function(t,e){e(t,["src","srcset"])},picture:function(t,e){[].slice.call(t.querySelectorAll("source")).forEach(function(t){e(t,["src","srcset"])})},video:function(t,e){[].slice.call(t.querySelectorAll("source")).forEach(function(t){e(t,["src"])}),e(t,["poster","src"])}};function n(e){!function(t){const e=t.tagName.toLowerCase();lazyElements[e](t,o)}(e),t.unobserveIntersection(e)}function o(t,e){e.forEach(function(e){e in t.dataset&&(t[e]=t.dataset[e],delete t.dataset[e])})}function c(t,e){e.forEach(function(e){t.hasAttribute(e)&&(t.dataset[e]=t[e],t.removeAttribute(e))})}t.onMutation(function(o){o.tagName.toLowerCase()in e&&function(e){if("loading"in e)return void(e.hasAttribute("loading")||e.setAttribute("loading","lazy"));const o=e.tagName.toLowerCase();lazyElements[o](e,c),t.observeIntersection(e,n)}(o)})}(Lazily);